{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a.kchaou1\\\\Desktop\\\\PFE\\\\tuto\\\\agents\\\\MERN-app-agents-holder\\\\client\\\\src\\\\components\\\\HolderHome\\\\ViewCredentialOffer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport qrcode from \"qrcode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ViewCredentialOffer() {\n  _s();\n  const [credentialOffer, setCredentialOffer] = useState([]);\n  const [qrCodeUrl, setQrCodeUrl] = useState(\"\");\n  useEffect(() => {\n    const did = sessionStorage.getItem(\"did\");\n    // Fetch data from the backend server\n    axios.post(\"http://localhost:3008/view-credential-offer\", {\n      didHolder: did\n    }).then(response => {\n      //setInvitations(response.data);\n      const data = response.data;\n      if (Array.isArray(data)) {\n        setCredentialOffer(data);\n      } else {\n        console.error(\"Invitations data is not an array:\", data);\n      }\n    }).catch(error => {\n      console.error(\"Failed to fetch invitations:\", error);\n    });\n  }, []);\n  const handleAcceptCredential = () => {\n    const did = sessionStorage.getItem(\"did\");\n    axios.post(\"http://localhost:3008/accept-credential-offer\", {\n      did: did\n    });\n  };\n  const handleGenerateQRcode = () => {\n    // Get the data from the selected offer\n    const offer = credentialOffer[0]; // Assuming you want to generate QR code for the first offer\n\n    if (offer) {\n      const branchManager = offer.branch_manager || \"N/A\"; // Use a default value if branchManager is undefined\n      const branchName = offer.branch_name || \"N/A\";\n      const holderDID = offer.did || \"N/A\";\n      const location = offer.branch_address || \"N/A\";\n      const revokedFromIssuer = offer.branch_address || \"N/A\";\n\n      // Concatenate the data into a single string\n      const data = `${branchManager}, ${branchName}, ${holderDID}, ${location}, ${location}`;\n\n      // Generate the QR code using the qrcode library\n      qrcode.toDataURL(data, (err, url) => {\n        if (err) {\n          console.error(err);\n        } else {\n          // Set the URL of the generated QR code\n          setQrCodeUrl(url);\n        }\n      });\n    }\n  };\n\n  // const handleGenerateQRcode = () => {\n  //   // Get the data from the selected offer\n  //   const offer = credentialOffer[0]; // Assuming you want to generate QR code for the first offer\n\n  //   if (offer) {\n  //     const branchManager = offer.branch_manager || \"N/A\";\n  //     const branchName = offer.branch_name || \"N/A\";\n  //     const holderDID = offer.did || \"N/A\";\n  //     const location = offer.branch_address || \"N/A\";\n\n  //     // Create a payload object with the necessary attributes\n  //     const payload = {\n  //       branch_manager: branchManager,\n  //       branch_name: branchName,\n  //       did: holderDID,\n  //       branch_address: location,\n  //     };\n\n  //     // Serialize the payload to a JSON string\n  //     const payloadString = JSON.stringify(payload);\n\n  //     // Convert the payload to a Uint8Array\n  //     const payloadData = new TextEncoder().encode(payloadString);\n\n  //     // Generate a cryptographic hash of the payload using SHA-256 algorithm\n  //     crypto.subtle.digest(\"SHA-256\", payloadData)\n  //       .then((hashBuffer) => {\n  //         // Convert the hash buffer to hexadecimal string\n  //         const hashArray = Array.from(new Uint8Array(hashBuffer));\n  //         const hashHex = hashArray.map(byte => byte.toString(16).padStart(2, '0')).join('');\n\n  //         // Combine the hash and payload into a single object\n  //         const qrCodeData = {\n  //           hash: hashHex,\n  //           payload: payload,\n  //         };\n\n  //         // Convert the QR code data to a JSON string\n  //         const qrCodeDataString = JSON.stringify(qrCodeData);\n\n  //         // Generate the QR code using the qrcode library\n  //         qrcode.toDataURL(qrCodeDataString, (err, url) => {\n  //           if (err) {\n  //             console.error(err);\n  //           } else {\n  //             // Set the URL of the generated QR code\n  //             setQrCodeUrl(url);\n  //           }\n  //         });\n  //       })\n  //       .catch((error) => {\n  //         console.error(\"Error generating hash:\", error);\n  //       });\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"View Credential Offer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-header\",\n        children: \"Credential Offer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: \"Credential Offer Sent by the Issuer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), credentialOffer.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No credential offers sent to this branch yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this) : credentialOffer.map((offer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Branch Manager: \", offer.branch_manager]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Branch Name: \", offer.branch_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Holder DID: \", offer.did]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Location: \", offer.branch_address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this), offer.acceptedFromHolder === \"no\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: handleAcceptCredential,\n            children: \"Accept Credential Offer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: handleGenerateQRcode,\n            children: \"Generate QR code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), qrCodeUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"card\",\n        src: qrCodeUrl,\n        alt: \"QR code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(ViewCredentialOffer, \"oH6iB+DUD3Y0CkUAo231VIE0rrE=\");\n_c = ViewCredentialOffer;\nexport default ViewCredentialOffer;\nvar _c;\n$RefreshReg$(_c, \"ViewCredentialOffer\");","map":{"version":3,"names":["React","useEffect","useState","axios","qrcode","jsxDEV","_jsxDEV","ViewCredentialOffer","_s","credentialOffer","setCredentialOffer","qrCodeUrl","setQrCodeUrl","did","sessionStorage","getItem","post","didHolder","then","response","data","Array","isArray","console","error","catch","handleAcceptCredential","handleGenerateQRcode","offer","branchManager","branch_manager","branchName","branch_name","holderDID","location","branch_address","revokedFromIssuer","toDataURL","err","url","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","index","acceptedFromHolder","onClick","style","marginTop","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/a.kchaou1/Desktop/PFE/tuto/agents/MERN-app-agents-holder/client/src/components/HolderHome/ViewCredentialOffer.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport qrcode from \"qrcode\";\r\n\r\nfunction ViewCredentialOffer() {\r\n  const [credentialOffer, setCredentialOffer] = useState([]);\r\n  const [qrCodeUrl, setQrCodeUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const did = sessionStorage.getItem(\"did\");\r\n    // Fetch data from the backend server\r\n    axios\r\n      .post(\"http://localhost:3008/view-credential-offer\", { didHolder: did })\r\n      .then((response) => {\r\n        //setInvitations(response.data);\r\n        const data = response.data;\r\n        if (Array.isArray(data)) {\r\n          setCredentialOffer(data);\r\n        } else {\r\n          console.error(\"Invitations data is not an array:\", data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Failed to fetch invitations:\", error);\r\n      });\r\n  }, []);\r\n\r\n  const handleAcceptCredential = () => {\r\n    const did = sessionStorage.getItem(\"did\");\r\n    axios.post(\"http://localhost:3008/accept-credential-offer\", { did: did });\r\n  };\r\n\r\n  const handleGenerateQRcode = () => {\r\n    // Get the data from the selected offer\r\n    const offer = credentialOffer[0]; // Assuming you want to generate QR code for the first offer\r\n\r\n    if (offer) {\r\n      const branchManager = offer.branch_manager || \"N/A\"; // Use a default value if branchManager is undefined\r\n      const branchName = offer.branch_name || \"N/A\";\r\n      const holderDID = offer.did || \"N/A\";\r\n      const location = offer.branch_address || \"N/A\";\r\n      const revokedFromIssuer = offer.branch_address || \"N/A\";\r\n\r\n      // Concatenate the data into a single string\r\n      const data = `${branchManager}, ${branchName}, ${holderDID}, ${location}, ${location}`;\r\n\r\n      // Generate the QR code using the qrcode library\r\n      qrcode.toDataURL(data, (err, url) => {\r\n        if (err) {\r\n          console.error(err);\r\n        } else {\r\n          // Set the URL of the generated QR code\r\n          setQrCodeUrl(url);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  // const handleGenerateQRcode = () => {\r\n  //   // Get the data from the selected offer\r\n  //   const offer = credentialOffer[0]; // Assuming you want to generate QR code for the first offer\r\n  \r\n  //   if (offer) {\r\n  //     const branchManager = offer.branch_manager || \"N/A\";\r\n  //     const branchName = offer.branch_name || \"N/A\";\r\n  //     const holderDID = offer.did || \"N/A\";\r\n  //     const location = offer.branch_address || \"N/A\";\r\n  \r\n  //     // Create a payload object with the necessary attributes\r\n  //     const payload = {\r\n  //       branch_manager: branchManager,\r\n  //       branch_name: branchName,\r\n  //       did: holderDID,\r\n  //       branch_address: location,\r\n  //     };\r\n  \r\n  //     // Serialize the payload to a JSON string\r\n  //     const payloadString = JSON.stringify(payload);\r\n  \r\n  //     // Convert the payload to a Uint8Array\r\n  //     const payloadData = new TextEncoder().encode(payloadString);\r\n  \r\n  //     // Generate a cryptographic hash of the payload using SHA-256 algorithm\r\n  //     crypto.subtle.digest(\"SHA-256\", payloadData)\r\n  //       .then((hashBuffer) => {\r\n  //         // Convert the hash buffer to hexadecimal string\r\n  //         const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n  //         const hashHex = hashArray.map(byte => byte.toString(16).padStart(2, '0')).join('');\r\n  \r\n  //         // Combine the hash and payload into a single object\r\n  //         const qrCodeData = {\r\n  //           hash: hashHex,\r\n  //           payload: payload,\r\n  //         };\r\n  \r\n  //         // Convert the QR code data to a JSON string\r\n  //         const qrCodeDataString = JSON.stringify(qrCodeData);\r\n  \r\n  //         // Generate the QR code using the qrcode library\r\n  //         qrcode.toDataURL(qrCodeDataString, (err, url) => {\r\n  //           if (err) {\r\n  //             console.error(err);\r\n  //           } else {\r\n  //             // Set the URL of the generated QR code\r\n  //             setQrCodeUrl(url);\r\n  //           }\r\n  //         });\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.error(\"Error generating hash:\", error);\r\n  //       });\r\n  //   }\r\n  // };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h1>View Credential Offer</h1>\r\n      <div className=\"card\">\r\n        <h5 className=\"card-header\">Credential Offer</h5>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">Credential Offer Sent by the Issuer</h5>\r\n          {credentialOffer.length === 0 ? (\r\n            <p>No credential offers sent to this branch yet.</p>\r\n          ) : (\r\n            credentialOffer.map((offer, index) => (\r\n              <div key={index}>\r\n                <p>Branch Manager: {offer.branch_manager}</p>\r\n                <p>Branch Name: {offer.branch_name}</p>\r\n                <p>Holder DID: {offer.did}</p>\r\n                <p>Location: {offer.branch_address}</p>\r\n\r\n                {offer.acceptedFromHolder === \"no\" ? (\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={handleAcceptCredential}\r\n                  >\r\n                    Accept Credential Offer\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={handleGenerateQRcode}\r\n                  >\r\n                    Generate QR code\r\n                  </button>\r\n                )}\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {qrCodeUrl && (\r\n        <div className=\"container\" style={{ marginTop: \"20px\" }}>\r\n          <img className=\"card\" src={qrCodeUrl} alt=\"QR code\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewCredentialOffer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}